discovery: libinput
    command:list-devices

identifier: HUION.*Pad # identify the device
    listen: abs # changes occurring on absolute points
    # gesture pinch in   2         xdotool keydown ctrl click  5 keyup ctrl
    # gesture pinch out  2         xdotool keydown ctrl click  4 keyup ctrl
    # gesture pinch clockwise      xdotool keydown ctrl click 2 click 4  keyup ctrl
    # gesture pinch anticlockwise  xdotool keydown ctrl click 2 click 5  keyup ctrl
    listen: buttons # maybe consider also having keys|buttons to mean the same thing
        button: 256 # NORTH
            command: xdotool key q
        button: 257 # WEST
            command: xdotool key w
        button: 258
            command: xdotool key e
        button: 259
            command: xdotool key r
        button: 260
            command: xdotool key t
        button: 261
            command: xdotool key y
        button: 262
            command: xdotool key u
        button_up: 263
            command: xdotool key i
        button: 264
            command: xdotool key o
        button: 265
            command: xdotool key p
        button: 304 # BTN_SOUTH
            command: xdotool key a
        button: 305 # BTN_EAST
            command: xdotool key s

    listen: radial # This implementation should work for circular controllers
        north: 264
        west:265
        south: 304
        east: 305
        order: north, east, south, west
            command:
        order: north, west, south, east
            command:

marker: HUION.*Pen # Identify the device
    listen: x, y, pressure # Properties the input supports are placed here
        combine: x, y
            command:
            friction: 0
        command: # Executes a command with the consideration of x y and pressure
        friction: 0
        thresholds:
            pressure: 10 # At what point should we consider to fire the this driver with pressure sensors

marker: HUION.*Keyboard # Identify the device